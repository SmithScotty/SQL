Calculate the average popularity for the artists in the Spotify data table. 
Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”.
 
 SELECT artist_name, AVG(popularity) AS avg_popularity, 'Top Star' as label  
FROM Spotifydata
GROUP BY artist_name
HAVING AVG(popularity) >= 90 

Using a CTE.

WITH popularity_average_CTE AS (
SELECT s.artist_name,
AVG(s.popularity) AS average_popularity
FROM SpotifyData s 
GROUP BY s.artist_name
)

SELECT artist_name, AVG(popularity) AS avg_popularity, 'Top Star' as label  
FROM Spotifydata
GROUP BY artist_name
HAVING AVG(popularity) >= 90 
 
Answer Walkthrough
First, you need to define your CTE using a WITH statement. That's followed by the name of the CTE, which we can call popularity_average_CTE in this case. A CTE query is then defined in between the parentheses. When you look at it on its own, it’s not complicated; it's a basic SELECT query. It selects artist_name, and calculates the average popularity, using the column popularity FROM the table SpotifyData. (Note how we didn't specify the database name, BIT_DB, like we usually do when writing SQL. This is because SQLite Studio assumes that you want to use whichever database you're already connected to for the CTE.) The result is shown in the new column average_popularity. The result is grouped by the column artist_name. The records are grouped because you need to obtain the result by artist.
After the CTE is defined, there’s another SELECT query that uses the CTE. This query selects the columns artist_nameand average_popularity from the CTE. It also assigns the value “Top Star.” There is a WHERE clause at the end to show only those artists with an average popularity of 90 or above.

 
